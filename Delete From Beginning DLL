#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* prev;
    struct Node* next;
};

struct Node* head = NULL;

// üîπ ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
void display() {
    struct Node* temp = head;
    printf("\nDoubly Linked List: ");
    while (temp != NULL) {
        printf("%d <-> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}

// üîπ Delete From Beginning
void deleteFromBeginning() {
    if (head == NULL) {
        printf("\nList is empty! Nothing to delete.\n");
        return;
    }

    struct Node* temp = head;  // ‡¶™‡ßÅ‡¶∞‡¶®‡ßã ‡¶π‡ßá‡¶° ‡¶ß‡¶∞‡ßá ‡¶∞‡¶æ‡¶ñ‡¶≤‡¶æ‡¶Æ
    head = head->next;         // ‡¶π‡ßá‡¶°‡¶ï‡ßá ‡¶™‡¶∞‡ßá‡¶∞ ‡¶®‡ßã‡¶°‡ßá ‡¶®‡¶ø‡ßü‡ßá ‡¶ó‡ßá‡¶≤‡¶æ‡¶Æ

    if (head != NULL)
        head->prev = NULL;     // ‡¶®‡¶§‡ßÅ‡¶® ‡¶π‡ßá‡¶°‡ßá‡¶∞ prev NULL ‡¶ï‡¶∞‡¶≤‡¶æ‡¶Æ

    printf("\nDeleted node: %d\n", temp->data);
    free(temp);                // ‡¶™‡ßÅ‡¶∞‡¶®‡ßã ‡¶π‡ßá‡¶°‡ßá‡¶∞ ‡¶Æ‡ßá‡¶Æ‡¶∞‡¶ø ‡¶Æ‡ßÅ‡¶ï‡ßç‡¶§ ‡¶ï‡¶∞‡¶≤‡¶æ‡¶Æ
}

// üîπ ‡¶Æ‡ßá‡¶á‡¶® ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
int main() {
    int n, val;
    struct Node *temp, *newnode;

    printf("How many nodes initially? ");
    scanf("%d", &n);

    // ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü ‡¶§‡ßà‡¶∞‡¶ø
    for (int i = 1; i <= n; i++) {
        printf("Enter value for node %d: ", i);
        scanf("%d", &val);

        newnode = (struct Node*)malloc(sizeof(struct Node));
        newnode->data = val;
        newnode->prev = NULL;
        newnode->next = NULL;

        if (head == NULL) {
            head = newnode;
            temp = head;
        } else {
            temp->next = newnode;
            newnode->prev = temp;
            temp = newnode;
        }
    }

    printf("\nOriginal List:\n");
    display();

    // Delete From Beginning
    deleteFromBeginning();

    printf("\nAfter Deleting First Node:\n");
    display();

    return 0;
}
