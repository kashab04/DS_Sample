#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

// নতুন নোড তৈরি করার ফাংশন
struct Node* createNode(int value) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = value;
    newNode->next = NULL;
    return newNode;
}

// পজিশনে ইনসার্ট করা
struct Node* insertAtPosition(struct Node* head, int position, int value) {
    struct Node* newNode = createNode(value);

    // যদি লিস্ট ফাঁকা হয় বা পজিশন 1 হয় (মানে শুরুতে ইনসার্ট)
    if (position == 1 || head == NULL) {
        newNode->next = head;
        head = newNode;
        return head;
    }

    struct Node* temp = head;
    for (int i = 1; i < position - 1; i++) {
        if (temp == NULL) {
            printf("Position is out of range!\n");
            return head;
        }
        temp = temp->next;
    }

    newNode->next = temp->next;
    temp->next = newNode;

    return head;
}

// লিস্ট প্রিন্ট করা
void printList(struct Node* head) {
    struct Node* temp = head;
    while (temp != NULL) {
        printf("%d -> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}

int main() {
    struct Node* head = NULL;
    int n, value, pos;

    printf("How many nodes do you want to insert initially? ");
    scanf("%d", &n);

    // লিস্ট তৈরি করা
    for (int i = 1; i <= n; i++) {
        printf("Enter value for node %d: ", i);
        scanf("%d", &value);
        head = insertAtPosition(head, i, value);  // একটার পর একটা ইনসার্ট
    }

    printf("\nCurrent Linked List: ");
    printList(head);

    // নতুন নোড ইনসার্ট করা
    printf("\nEnter position to insert a new node: ");
    scanf("%d", &pos);
    printf("Enter value for the new node: ");
    scanf("%d", &value);

    head = insertAtPosition(head, pos, value);

    printf("\nUpdated Linked List: ");
    printList(head);

    return 0;
}
